function Ke = cont2D4te(H, B, dJ, t, D, defgrad, stress)
% Computes the stiffness matrix

function AH = AxH(F, Hk)
    F = F - [1 0 0 1]';
    AH = zeros(3, 8);
    AH(1, :) = F(1)*Hk(1, :) + F(3)*Hk(3, :);
    AH(2, :) = F(2)*Hk(2, :) + F(4)*Hk(4, :);
    AH(3, :) = F(2)*Hk(1, :) + F(1)*Hk(2, :) + ...
        F(4)*Hk(3, :) + F(3)*Hk(4, :);
end   

Ke = zeros(8, 8);
for k = 1:4
    % Non-linear part
    s = stress{k};
    Rk = [s(1) s(3); s(3) s(2)];
    
    Hk = H{k};
    F = defgrad{k};
    F = F - [1 0 0 1]';
    Nl = zeros(3, 8);
    Nl(1, :) = F(1)*Hk(1, :) + F(3)*Hk(3, :);
    Nl(2, :) = F(2)*Hk(2, :) + F(4)*Hk(4, :);
    Nl(3, :) = F(2)*Hk(1, :) + F(1)*Hk(2, :) + ...
        F(4)*Hk(3, :) + F(3)*Hk(4, :);
    H1 = Hk(1:2, :);
    Nl1 = H1'*([s(1)*H1]);
    H2 = Hk(3:4, :);
    Nl2 = H2'*(Rk*H2);
    
    % Linear part
    Bk = B{k} + Nl;
    
    Ke = Ke + (Bk'*D{k}*Bk + (Nl1 + Nl2))*dJ{k}*t;
end
end